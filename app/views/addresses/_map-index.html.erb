<script>
 document.addEventListener('turbolinks:load', function () {
   // only do this if you find the map, otherwise we don't need no maps
   if (document.getElementById("map") !== null) {

     // check to see if google map is loaded, if so, just init that map! Otherwise, create the script tag
     if (isMapsApiLoaded) {
       initMap();
     } else {
       var script = document.createElement("script");
       script.type = "text/javascript";
       script.src = "http://maps.google.com/maps/api/js?key=<%= Rails.application.secrets[:maps_key] %>&callback=initMap";
       document.body.appendChild(script);
     }
   }
 });

 function initMap() {
   isMapsApiLoaded = true;

   var bounds = new google.maps.LatLngBounds();
   var locations = <%= raw location_info(@addresses) %>;

   var map = new google.maps.Map(document.getElementById('map'), {
     zoom: 10,
     center: new google.maps.LatLng(-33.92, 151.25),
     mapTypeId: google.maps.MapTypeId.ROADMAP
   });

   var infowindow = new google.maps.InfoWindow();

   var marker, i;

   for (i = 0; i < locations.length; i++) {
     marker = new google.maps.Marker({
       position: new google.maps.LatLng(locations[i][1], locations[i][2]),
       map: map
     });

     //extend the bounds to include each marker's position
     bounds.extend(marker.position);

     google.maps.event.addListener(marker, 'click', (function(marker, i) {
       return function() {
         infowindow.setContent(locations[i][0]);
         infowindow.open(map, marker);
         map.setZoom(13); // zoom on the marker upon click
         map.panTo(marker.position);
       }
     })(marker, i));
   }

   //now fit the map to the newly inclusive bounds
   map.fitBounds(bounds);
 }

</script>
